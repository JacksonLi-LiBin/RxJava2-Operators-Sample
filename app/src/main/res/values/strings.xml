<!--
    ~ Copyright (c) 2018-2019. KunMinX
    ~
    ~ Licensed under the Apache License, Version 2.0 (the "License");
    ~ you may not use this file except in compliance with the License.
    ~ You may obtain a copy of the License at
    ~
    ~    http://www.apache.org/licenses/LICENSE-2.0
    ~
    ~ Unless required by applicable law or agreed to in writing, software
    ~ distributed under the License is distributed on an "AS IS" BASIS,
    ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    ~ See the License for the specific language governing permissions and
    ~ limitations under the License.
    ~
-->

<resources>
    <string name="app_name">RxJava Magician</string>

    <!--drawer items-->
    <string name="guide">Guide</string>
    <string name="declare">Declare</string>
    <string name="group_samples">Samples</string>
    <string name="operators">Operators</string>
    <string name="networking">Networking</string>
    <string name="cache">Cache</string>
    <string name="rx_bus">RxBus</string>
    <string name="pagination">Pagination</string>
    <string name="compose">Compose for reusable</string>
    <string name="search">Search</string>
    <string name="group_more">More</string>
    <string name="setting">Settings</string>
    <string name="about">About</string>

    <!--buttons-->
    <string name="doSomeWork">doSomeWork</string>
    <string name="click_me">Click Me</string>
    <string name="result">Result</string>
    <string name="copy">Copy</string>
    <string name="view_integrity">View integrity</string>
    <string name="i_got_it">I Got It</string>
    <string name="share">Share</string>
    <string name="btn_name_add">ADD</string>
    <string name="btn_name_remove">REMOVE</string>
    <string name="btn_name_close">CLOSE</string>
    <string name="btn_name_clear">CLEAR</string>

    <!--tips-->
    <string name="about_me">- Produce by KunMinX with Love -</string>
    <string name="test_code">
        Outputï¼š\n\nObservable.just(1, 3, 5, 7, 9)\n .map(i -&gt; i + 1)\n .filter(i -&gt; i &lt; 5)\n .subscribe(getObserve());\n
    </string>
    <string name="code_tip">
        Tip:\n\n Press ADD button to get start.\n
    </string>
    <string name="tip_developing">This function is developing ^_^</string>
    <string name="tip_of_developing">Press ADD button to get start ^_^</string>
    <string name="tip_got_it">Congratulations! ^_^</string>


    <string name="dialog_title_warning">Warning</string>
    <string name="dialog_msg_clear_op_list">Are you sure to clear operator list ?</string>
    <string name="sure">Sure</string>
    <string name="cancel">Cancel</string>

    <!--links-->
    <string name="link_guide">https://mp.weixin.qq.com/s/LQLvwtmKNoOfiCtl4iADgw</string>
    <string name="link_about">https://github.com/KunMinX/RxJava2-Operators-Sample/blob/master/README.md</string>

    <!--datas-->
    <string name="operators_json">
        "[{\"header\":\"Creating\",\"isHeader\":true},{\"isHeader\":false,\"info\":{\"content\":\"Complex data traversal\",\"group\":\"Creating\",\"title\":\"just\"}},{\"isHeader\":false,\"info\":{\"content\":\"Complex data traversal\",\"group\":\"Creating\",\"title\":\"fromArray\"}},{\"isHeader\":false,\"info\":{\"content\":\"Complex data traversal\",\"group\":\"Creating\",\"title\":\"fromIterable\"}},{\"isHeader\":false,\"info\":{\"content\":\"Timed task\",\"group\":\"Creating\",\"title\":\"interval\"}},{\"isHeader\":false,\"info\":{\"content\":\"Timed task\",\"group\":\"Creating\",\"title\":\"intervalRange\"}},{\"isHeader\":false,\"info\":{\"content\":\"Nested callback asynchronous event\",\"group\":\"Creating\",\"title\":\"create\"}},{\"isHeader\":false,\"info\":{\"content\":\"Delayed task\",\"group\":\"Creating\",\"title\":\"defer\"}},{\"isHeader\":false,\"info\":{\"content\":\"Delayed task\",\"group\":\"Creating\",\"title\":\"timer\"}},{\"header\":\"Transforming\",\"isHeader\":true},{\"isHeader\":false,\"info\":{\"content\":\"Transformation\",\"group\":\"Transforming\",\"title\":\"map\"}},{\"isHeader\":false,\"info\":{\"content\":\"Transformation\",\"group\":\"Transforming\",\"title\":\"flatMap\"}},{\"isHeader\":false,\"info\":{\"content\":\"Transformation\",\"group\":\"Transforming\",\"title\":\"concatMap\"}},{\"header\":\"Combining\",\"isHeader\":true},{\"isHeader\":false,\"info\":{\"content\":\"Combine multiple observers, and merge events\",\"group\":\"Combining\",\"title\":\"concatArray\"}},{\"isHeader\":false,\"info\":{\"content\":\"Combine multiple observers, and merge events\",\"group\":\"Combining\",\"title\":\"concatDelayError\"}},{\"isHeader\":false,\"info\":{\"content\":\"Combine multiple observers, and merge events\",\"group\":\"Combining\",\"title\":\"megerArray\"}},{\"isHeader\":false,\"info\":{\"content\":\"Combine multiple observers, and merge events\",\"group\":\"Combining\",\"title\":\"megerArrayDelayError\"}},{\"isHeader\":false,\"info\":{\"content\":\"Combine multiple observers and merge them into one observer\",\"group\":\"Combining\",\"title\":\"zip\"}},{\"isHeader\":false,\"info\":{\"content\":\"Combine multiple observers and merge them into one observer\",\"group\":\"Combining\",\"title\":\"combineLatest\"}},{\"isHeader\":false,\"info\":{\"content\":\"Append other events before sending the event\",\"group\":\"Combining\",\"title\":\"startWithArray\"}},{\"isHeader\":false,\"info\":{\"content\":\"Combine multiple events into one event\",\"group\":\"Combining\",\"title\":\"reduce\"}},{\"isHeader\":false,\"info\":{\"content\":\"Combine multiple events into one event\",\"group\":\"Combining\",\"title\":\"collect\"}},{\"isHeader\":false,\"info\":{\"content\":\"Summarize the number of events sent\",\"group\":\"Combining\",\"title\":\"count\"}},{\"header\":\"Filtering\",\"isHeader\":true},{\"isHeader\":false,\"info\":{\"content\":\"Specify filter criteria to filter the required events or data\",\"group\":\"Filtering\",\"title\":\"filter\"}},{\"isHeader\":false,\"info\":{\"content\":\"Filter specified types of events or data\",\"group\":\"Filtering\",\"title\":\"ofType\"}},{\"isHeader\":false,\"info\":{\"content\":\"Events or data with unsatisfied filter conditions\",\"group\":\"Filtering\",\"title\":\"skip\"}},{\"isHeader\":false,\"info\":{\"content\":\"Filter duplicate events or data\",\"group\":\"Filtering\",\"title\":\"distinct\"}},{\"isHeader\":false,\"info\":{\"content\":\"Filter duplicate events or data\",\"group\":\"Filtering\",\"title\":\"distinctUntilChanged\"}},{\"isHeader\":false,\"info\":{\"content\":\"Filter events or data by time or amount\",\"group\":\"Filtering\",\"title\":\"take\"}},{\"isHeader\":false,\"info\":{\"content\":\"Filter events at the specified location\",\"group\":\"Filtering\",\"title\":\"elementAt\"}},{\"isHeader\":false,\"info\":{\"content\":\"Filter events by time period\",\"group\":\"Filtering\",\"title\":\"throttleFirst\"}},{\"isHeader\":false,\"info\":{\"content\":\"Filter events by time period\",\"group\":\"Filtering\",\"title\":\"throttleLast\"}},{\"header\":\"Conditional\",\"isHeader\":true},{\"isHeader\":false,\"info\":{\"content\":\"Determine if all events are met\",\"group\":\"Conditional\",\"title\":\"all\"}},{\"isHeader\":false,\"info\":{\"content\":\"When the sent event judgment condition is not satisfied, the subsequent event reception will be terminated.\",\"group\":\"Conditional\",\"title\":\"takeWhile\"}},{\"isHeader\":false,\"info\":{\"content\":\"Receive subsequent events when the sent event judgment condition is not met\",\"group\":\"Conditional\",\"title\":\"skipWhile\"}},{\"isHeader\":false,\"info\":{\"content\":\"Same as filter\",\"group\":\"Conditional\",\"title\":\"takeUntil\"}},{\"isHeader\":false,\"info\":{\"content\":\"Receive events other than the judgment condition\",\"group\":\"Conditional\",\"title\":\"skipUntil\"}},{\"isHeader\":false,\"info\":{\"content\":\"Determine if the events sent by the two observers are the same\",\"group\":\"Conditional\",\"title\":\"sequenceEqual\"}},{\"isHeader\":false,\"info\":{\"content\":\"Determine whether the specified data contains the specified data.\",\"group\":\"Conditional\",\"title\":\"contains\"}},{\"isHeader\":false,\"info\":{\"content\":\"Determine if the sent data is empty\",\"group\":\"Conditional\",\"title\":\"isEmpty\"}},{\"isHeader\":false,\"info\":{\"content\":\"Multiple observers receive only the \\\"first observed observer who successfully sent data\\\"\",\"group\":\"Conditional\",\"title\":\"amb\"}},{\"header\":\"Blocking\",\"isHeader\":true},{\"isHeader\":false,\"info\":{\"content\":\"Send and receive event listeners\",\"group\":\"Blocking\",\"title\":\"doOnEach\"}},{\"isHeader\":false,\"info\":{\"content\":\"Send and receive event listeners\",\"group\":\"Blocking\",\"title\":\"doOnSubscribe\"}},{\"isHeader\":false,\"info\":{\"content\":\"Send and receive event listeners\",\"group\":\"Blocking\",\"title\":\"doOnNext\"}},{\"isHeader\":false,\"info\":{\"content\":\"Send and receive event listeners\",\"group\":\"Blocking\",\"title\":\"doAfterNext\"}},{\"isHeader\":false,\"info\":{\"content\":\"Send and receive event listeners\",\"group\":\"Blocking\",\"title\":\"doOnComplete\"}},{\"isHeader\":false,\"info\":{\"content\":\"Send and receive event listeners\",\"group\":\"Blocking\",\"title\":\"doOnError\"}},{\"isHeader\":false,\"info\":{\"content\":\"Error or exception handling: catch exceptions and feedback special results, normal termination\",\"group\":\"Blocking\",\"title\":\"onErrorReturn\"}},{\"isHeader\":false,\"info\":{\"content\":\"Error or exception handling: catch exception and return a new event\",\"group\":\"Blocking\",\"title\":\"onErrorResumeNext\"}},{\"isHeader\":false,\"info\":{\"content\":\"Error or exception handling: exception retry\",\"group\":\"Blocking\",\"title\":\"retry\"}},{\"isHeader\":false,\"info\":{\"content\":\"Event retransmission\",\"group\":\"Blocking\",\"title\":\"repeat\"}},{\"isHeader\":false,\"info\":{\"content\":\"Event retransmission\",\"group\":\"Blocking\",\"title\":\"repeatWhen\"}},{\"isHeader\":false,\"info\":{\"content\":\"Event retransmission\",\"group\":\"Blocking\",\"title\":\"repeatUntil\"}},{\"isHeader\":false,\"info\":{\"content\":\"Delay sending an observer's event\",\"group\":\"Blocking\",\"title\":\"delay\"}},{\"isHeader\":false,\"info\":{\"content\":\"Send event timeout processing\",\"group\":\"Blocking\",\"title\":\"timeout\"}}]"
    </string>
    <string name="exit_tip">Press Back button again to exit.</string>

    <string name="drawer_header_rx_magic">RxMagician</string>
    <string name="drawer_header_not_used_to">You are not used to RxJava</string>
    <string name="drawer_header_lack_key">Just because the lack of this key</string>

</resources>
